#include <iostream>
#include <map>
#include <string>
#include <vector>

using namespace std;

int main()
{
    map <string, vector <string>> la_dict;
    
    // Получить количество записей в англо-латинском словаре.
    int n;
    cin >> n;

    // Обработка записей англо-латинского словаря по одной.
    for (int i = 0; i < n; i++) {
        string lat_word, eng_word;

        // Чтение английского слова и пропуск дефиса (дефис помещается вместо
        // латинского слова, значение которого будет получено позже.
        cin >> eng_word >> lat_word;

        // Повторять, пока список латинских слов не закончился.
        bool end = false;
        while (!end) {
            // Чтение латинского слова (вместе с запятыми, если есть).
            cin >> lat_word;

            // Обрезка запятых или отметка о конце списка латинских слов.
            if (lat_word[lat_word.length() - 1] == ',') {
                // Если в конце слова есть запятая, значит это слово не последнее.
                // Вырезать подстроку со словом, запятая больше не нужна.
                lat_word = lat_word.substr(0, lat_word.length() - 1);
            } else {
                // Если запятой в конце слова нет, значит это слово последнее в списке.
                end = true;
            }

            // Заполнение словаря lat -> eng.
            // Условия выполняются: английские слова расположены в словаре в
            // лексикографическом порядке, значит и в списке перевода они будут
            // следовать в таком же порядке. Порядок латинских слов не важен, т.к.
            // map сортируется по ключу.
            la_dict[lat_word].push_back(eng_word);
        }
    }

    // Количество записей в новом словаре.
    cout << la_dict.size() << endl;
    
    // Записи словаря в формате "СЛОВО - ПЕРЕВОД 1, ..., ПЕРЕВОД N". 
    for (auto record : la_dict) {
        cout << record.first << " - ";
        for (size_t i = 0; i < record.second.size(); i++) {
            cout << record.second[i] << ((i + 1 < record.second.size()) ? ", " : "\n");
        }
    }

    return 0;
}